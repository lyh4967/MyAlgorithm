#include <vector>
#include <algorithm>
#include <iostream>
using namespace std;
void dfs(int start, vector<int>graph[], bool check[]){
	check[start] = true;
	cout << start;

	for (int i = 0; i < (int)graph[start].size(); i++){
		int next = graph[start][i];
		//방문하지 않았다면
		if (check[next] = false){
			//재귀함수를 호출한다
			dfs(next, graph, check);
		}
	}
}
int main (){

	int n, m, start;
	cin >> n >> m >> start;

	vector<int> graph[n+1];
	bool check [n+1];
	fill(check, check+n+1, false);

	for(int i=0; i<m; i++){
		int u,v;
		cin >> u >> v;

		graph[u].push_back(v);
		graph[v].push_back(u);
	}

	// Sorting은 왜 한거지?
	// 나중에 하나의 정점에서 다음을 탐색할 때 node 값에 순차적으로 접근해야하기 때문
	for(int i=1; i<=n; i++){
		sort(graph[i].begin(), graph[i].end());
	}

	//dfs
	dfs(start, graph, check);
	printf("\n");

	return 0;
}